name: build-and-push

on:
  pull_request:
    branches:
      - main
      - 'release/**'
      - 'feature/**'
      - 'hotfix/**'
    types: [closed]

jobs:
  vars:
    name: Setup Environment 🛠️
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "tag=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
          fi
      - run: echo ${{ steps.vars.outputs.tag }}
      - name: Print Env
        run: env | sort


  build-and-push:
    name: Build and Push 📦
    runs-on: ubuntu-latest
    needs:
      - vars
    steps:
      - name: Checkout the repo 🛎️
        uses: actions/checkout@v3

      - name: Set rev.txt 🛠️
        run: git show -s --format="%ai %H %s %aN" HEAD > rev.txt

      - name: Set up QEMU 🛠️
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx 🛠️
        uses: docker/setup-buildx-action@v2

      - name: Login Docker Registry 🪪
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and Push App 🚀
        uses: docker/build-push-action@v3
        with:
          push: true
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
          tags: ghcr.io/${{ github.repository }}:${{ needs.vars.outputs.tag }},ghcr.io/${{ github.repository }}:latest

      - name: Build and Push Liquibase 🚀
        if:   github.event.inputs.migration == 'enabled'
        uses: docker/build-push-action@v3
        with:
          push: true
          context: liquibase
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
          tags: ghcr.io/${{ github.repository }}-migration:${{ needs.vars.outputs.tag }},ghcr.io/${{ github.repository }}-migration:latest
