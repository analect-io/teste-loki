name: main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  env:
    uses: devxp-tech/.github/.github/workflows/env.yml@main

  echo:
    runs-on: ubuntu-latest
    needs: env
    steps:
      - run: echo ${{ needs.env.outputs.tag }}

  test:
    uses: devxp-tech/.github/.github/workflows/test-golang.yml@main

  sonarqube:
    uses: devxp-tech/.github/.github/workflows/sonarqube.yml@main
    secrets:
      SONARQUBE_HOST: ${{ secrets.SONARQUBE_HOST }}
      SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

  # synk:
  #   uses: devxp-tech/.github/.github/workflows/synk-golang.yml@main
  #   needs:
  #     - env
  #   secrets:
  #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-push:
    uses: devxp-tech/.github/.github/workflows/build-and-push.yml@main
    needs:
      - env
      - test
      - sonarqube

  trivy:
    uses: devxp-tech/.github/.github/workflows/trivy.yml@main
    needs:
      - build-and-push

  deploy:
    name: GitOps Deploy üèóÔ∏è
    runs-on: ubuntu-latest
    needs:
      - trivy

    steps:
    - name: Set Kustomize üõ†Ô∏è
      uses: imranismail/setup-kustomize@v2
      with:
        kustomize-version: "3.9.4"

    - name: GitOps Checkout üõéÔ∏è
      run: git clone https://${REPO_TOKEN}@github.com/devxp-tech/gitops.git .
      env:
        REPO_TOKEN: ${{secrets.ACCESS_TOKEN_GITHUB}}

    - name: Update Docker Image Tag üè∑Ô∏è
      run: |
        cd apps/teste-loki/overlays/dev
        OLD_TAG=$(cat kustomization.yaml | grep 'tag:' |  awk '{print $2}')
        NEW_TAG=${{ needs.env.outputs.tag }}
        sed -i "s|$OLD_TAG|$NEW_TAG|g" kustomization.yaml
    - name: Commit and Push üöÄ
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am ":robot: [GitHub Action] Set new image tag to https://github.com/devxp-tech/teste-loki/commit/${{ needs.env.outputs.tag }}"
        git push

  slack-workflow-status:
    if: always()
    name: Post Status To Slack  üì£
    needs:
      # - env
      # - test
      # - sonarqube
      # - synk
      # - build-and-push
      # - trivy
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.ACCESS_TOKEN_GITHUB}}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          # Optional Input
          channel: 'github-notifications'
          name: 'github-notifications'
          # icon_emoji: ':poop:'
          icon_url: ${{ secrets.SLACK_ICON }}