name: tests

on:
  push:
    branches: ["main", "feature/*", "hotfix/*"]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - 'README.md'


jobs:
  vars:
    name: Setup Environment 🛠️
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "tag=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
          fi
      - run: echo ${{ steps.vars.outputs.tag }}
      - name: Print Env
        run: env | sort

  test:
    name: Test Application 🔎
    runs-on: ubuntu-latest
    needs:
      - vars
    strategy:
      matrix:
        go: ["1.17", "1.18"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version:
      - run: go test -v ./...

  test-full:
    name: Test Docker Compose 🐳
    runs-on: ubuntu-latest
    needs:
      - vars
      - test
    steps:
      # need checkout before using compose-action
      - uses: actions/checkout@v3
      - uses: cloudposse/github-action-docker-compose-test-run@main
        with:
          file: ./docker-compose.yml
          service: ci

  sonarqube:
    name: SonarQube Scan 🔎
    runs-on: ubuntu-latest
    needs:
      - vars
      - test
      - test-full
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
