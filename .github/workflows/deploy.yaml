name: deploy

on:
  # the 1st condition
  workflow_run:
    workflows: ["tests", "build-and-push"]
    branches: [main]
    types:
      - completed
jobs:
  vars:
    name: Setup Environment 🛠️
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "tag=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_OUTPUT
          else
            echo "tag=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
          fi
      - run: echo ${{ steps.vars.outputs.tag }}
      - name: Print Env
        run: env | sort


  deploy:
    name: GitOps Deploy 🏗️
    runs-on: ubuntu-latest
    needs:
      - vars

    steps:
    - name: Set Kustomize 🛠️
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.9.4"

    - name: GitOps Checkout 🛎️
      run: git clone https://${REPO_TOKEN}@github.com/devxp-tech/gitops.git .
      env:
        REPO_TOKEN: ${{secrets.ACCESS_TOKEN_GITHUB}}

    - name: Update Docker Image Tag 🏷️
      run: |
        cd apps/teste-loki/overlays/dev
        #kustomize edit set image diegoluisi/${{ github.repository }}:${{ needs.vars.outputs.tag }}
        OLD_TAG=$(cat kustomization.yaml | grep 'tag:' |  awk '{print $2}')
        NEW_TAG=${{ needs.vars.outputs.tag }}
        sed -i "s|$OLD_TAG|$NEW_TAG|g" kustomization.yaml

    - name: Commit and Push 🚀
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am ":robot: [GitHub Action] Set new image tag to https://github.com/${{ github.repository }}/commit/${{ needs.vars.outputs.tag }}"
        git push

  slack-workflow-status:
    if: always()
    name: Post Status To Slack  📣
    needs:
      - vars
      - test
      - sonarqube
      - build-and-push
      - trivy
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.ACCESS_TOKEN_GITHUB}}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          # Optional Input
          channel: 'github-notifications'
          name: 'github-notifications'
          # icon_emoji: ':poop:'
          icon_url: ${{ secrets.SLACK_ICON }}
